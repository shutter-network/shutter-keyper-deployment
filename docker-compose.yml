x-logging: &logging
  driver: local
  options:
    max-file: 10

x-image-main: &image-main
  image: rolling-shutter

x-image-assets: &image-assets
  image: ghcr.io/shutter-network/assets:shutter-gnosis-1000-set-1-rc3

x-image-metrics: &image-metrics
  image: victoriametrics/vmagent:v1.101.0

x-shutter-environment: &shutter-environment
  #- SHUTTER_INSTANCEID= - set via config script
  - SHUTTER_DATABASEURL=postgres://postgres@db:5432/keyper
  - SHUTTER_BEACONAPIURL=${GNOSIS_BEACON_RPC_HTTP_URL}
  #- SHUTTER_MAXNUMKEYSPERMESSAGE= - set via config script
  #- SHUTTER_GNOSIS_ENCRYPTEDGASLIMIT= - set via config script
  - SHUTTER_GNOSIS_MAXTXPOINTERAGE=${MAXTXPOINTERAGE}
  #- SHUTTER_GNOSIS_GENESISSLOTTIMESTAMP= - set via config script
  #- SHUTTER_GNOSIS_SYNCSTARTBLOCKNUMBER= - set via config script
  - SHUTTER_GNOSIS_NODE_PRIVATEKEY=${SIGNING_KEY}
  - SHUTTER_GNOSIS_NODE_CONTRACTSURL=${GNOSIS_EXECUTION_RPC_HTTP_URL}
  - SHUTTER_GNOSIS_NODE_ETHEREUMURL=${GNOSIS_EXECUTION_RPC_WS_URL}
  #- SHUTTER_GNOSIS_CONTRACTS_KEYPERSETMANAGER= - set via config script
  #- SHUTTER_GNOSIS_CONTRACTS_KEYBROADCASTCONTRACT= - set via config script
  #- SHUTTER_GNOSIS_CONTRACTS_EONKEYPUBLISH= - set via config script
  #- SHUTTER_GNOSIS_CONTRACTS_SEQUENCER= - set via config script
  #- SHUTTER_GNOSIS_CONTRACTS_VALIDATORREGISTRY= - set via config script
  #- SHUTTER_P2P_CUSTOMBOOTSTRAPADDRESSES= - set via config script
  - SHUTTER_P2P_LISTENADDRESSES=/ip4/0.0.0.0/tcp/23003
  #- SHUTTER_P2P_DISCOVERYNAMESPACE= - set via config script
  - SHUTTER_SHUTTERMINT_SHUTTERMINTURL=http://chain:26657
  #- SHUTTER_SHUTTERMINT_DKGPHASELENGTH= - set via config script
  #- SHUTTER_SHUTTERMINT_DKGSTARTBLOCKDELTA= - set via config script
  - SHUTTER_METRICS_ENABLED=${METRICS_ENABLED}

x-shuttermint-environment: &shuttermint-environment
  - SHUTTERMINT_MONIKER=${KEYPER_NAME:-$(openssl rand -hex 8)}
  - PUBLIC_IP=${PUBLIC_IP}
  - METRICS_ENABLED=${METRICS_ENABLED}

services:
  db:
    image: postgres
    restart: always
    environment:
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - ./data/db:/var/lib/postgresql/data
      - ./scripts/keyper-db-init.sh:/docker-entrypoint-initdb.d/keyper-db-init.sh
    healthcheck:
      test: pg_isready -U postgres
    logging: *logging

  assets:
    <<: *image-assets
    stop_grace_period: "0s"

  keyper-create-config:
    <<: *image-main
    entrypoint:
      - /rolling-shutter
      - gnosiskeyper
    environment: *shutter-environment
    volumes:
      - ./config:/config
    command: "generate-config --output /config/generated.toml"

  keyper-initdb:
    <<: *image-main
    entrypoint:
      - /rolling-shutter
      - gnosiskeyper
    environment: *shutter-environment
    volumes:
      - ./config:/config
    command: "initdb --config /config/generated.toml"
    depends_on:
      db:
        condition: service_healthy
      keyper-create-config:
        condition: service_completed_successfully

  chain-init:
    <<: *image-main
    entrypoint:
      - /rolling-shutter
      - chain
    environment: *shuttermint-environment
    volumes_from:
      - assets:ro
    volumes:
      - ./data/chain:/chain
    command: "init --root /chain --genesis-keyper ${GENESIS_KEYPER} --blocktime ${SM_BLOCKTIME} --listen-address tcp://0.0.0.0:26657 --role validator"
    depends_on:
      keyper-initdb:
        condition: service_completed_successfully

  keyper-configure:
    image: busybox
    command: "./configure_keyper.sh"
    environment: *shutter-environment
    volumes_from:
      - assets:ro
    volumes:
      - ./scripts/configure_keyper.sh:/configure_keyper.sh
      - ./data:/data
      - ./config:/config
    depends_on:
      chain-init:
        condition: service_completed_successfully
      assets:
        condition: service_started

  chain-configure:
    image: busybox
    command: "./configure_shuttermint.sh"
    environment: *shuttermint-environment
    volumes_from:
      - assets:ro
    volumes:
      - ./scripts/configure_shuttermint.sh:/configure_shuttermint.sh
      - ./data:/data
    depends_on:
      chain-init:
        condition: service_completed_successfully
      assets:
        condition: service_started

  chain:
    <<: *image-main
    restart: always
    entrypoint:
      - /rolling-shutter
      - chain
    ports:
      - "${PUBLIC_IP}:26656:26656"
      - "${METRICS_LISTEN_IP}:26660:26660"
    volumes_from:
      - assets:ro
    volumes:
      - ./data/chain:/chain
    command: "--config /chain/config/config.toml"
    depends_on:
      assets:
        condition: service_started
      keyper-configure:
        condition: service_completed_successfully
      chain-configure:
        condition: service_completed_successfully
    logging: *logging

  keyper:
    <<: *image-main
    restart: always
    entrypoint:
      - /rolling-shutter
      - gnosiskeyper
    command: "--config /config/keyper.toml"
    volumes_from:
      - assets:ro
    volumes:
      - ./config:/config
    ports:
      - "${PUBLIC_IP}:23003:23003"
      - "${METRICS_LISTEN_IP}:9100:9100"
    depends_on:
      db:
        condition: service_healthy
      chain:
        condition: service_started
      assets:
        condition: service_started
      keyper-configure:
        condition: service_completed_successfully
    logging: *logging

  vmagent:
    profiles: [pushmetrics]
    <<: *image-metrics
    restart: always
    environment:
      KEYPER_NAME:
      PUSHGATEWAY_URL:
    ports:
      - 9111:9111
    volumes:
      - ./config_static/vmagent.yaml:/config/vmagent.yml
    command: "-promscrape.config=/config/vmagent.yml -remoteWrite.url=${PUSHGATEWAY_URL}"
    logging: *logging
